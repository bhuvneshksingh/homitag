module.exports = {
  baseURL: process.env.BASE_API,
  loginApi: '/accounts/login',
  regsiterApi: '/accounts/users',
  forgotPasswordApi: '/accounts/login/forgotPassword',
  resetPasswordApi: (userId, resetToken) => `/accounts/login/resetPassword/${userId}/${resetToken}`,
  bankAccountApi: userId => `/banking/accounts/${encodeURIComponent(userId)}/bankAccounts`,
  bankAccountDetailsApi: (userId, accountId) =>
    `/banking/accounts/${encodeURIComponent(userId)}/bankAccounts/${accountId}`,
  stripeApi: `/banking/accounts`,
  stripeUserIdApi: userId => `/banking/accounts/${encodeURIComponent(userId)}`,
  usersApi: userId => `/accounts/users/${encodeURIComponent(userId)}`,
  userBusiness: userId => `/accounts/business/${encodeURIComponent(userId)}`,
  verificationApi: (userId, verificationType) => `/accounts/users/${userId}/verify/${verificationType}`,
  businessShipping: '/accounts/business/shipping',
  catalogsApi: '/accounts/catalog',
  catalogApi: (page, perPage, createdAtGreater, createdAtLess ) => `catalog/posts?${createdAtGreater && `createdAtGreater=${createdAtGreater}&`}${createdAtLess && `createdAtLess=${createdAtLess}&`}${page && `page=${page}&`}${perPage && `perPage=${perPage}`}`,
  orderApi: (page, perPage, createdAtGreater, createdAtLess ) => `orders/orders?${createdAtGreater && `createdAtGreater=${createdAtGreater}&`}${createdAtLess && `createdAtLess=${createdAtLess}&`}${page && `page=${page}&`}${perPage && `perPage=${perPage}`}`,
  catalogCategoriesApi: '/catalog/categories',
  ordersListApi: () => '/orders/orders?type=order',
  orderLabel: (provider) => `/orders/shipping/label?provider=${provider}`,
  orderShowApi: () => '/orders/orders',
  ordersCancelApi: (orderId) => `/orders/orders/${orderId}/cancel`,
  ordersArchiveApi: (orderId) => `/orders/orders/${orderId}/archive`,
  ordersShipApi: (orderId) => `/orders/orders/${orderId}`,
  ordersReturnCountApi: () => `/orders/returns/count`,
  postModifyApi: (postId) => `/catalog/posts/${postId}`,
  returnsListApi: () => '/orders/orders?type=return',
  reasonsRefundListApi: () => '/orders/reasonsRefund',
  reasonsDeclineListApi: () => '/orders/reasonsDecline',
  refundOrderApi: (orderId) => `/orders/orders/${orderId}/refundRequest`,
  declineOrderApi: (orderId) => `/orders/orders/${orderId}/declineRequest`,
  cancellationsListApi: () => '/orders/orders?type=cancellation',
  archivedListApi: () => '/orders/orders',
  inventoryListApi: () => '/catalog/posts',
  inventoryProductsApi: () => 'catalog/products',
  deliveryMethodsApi: () => 'catalog/deliveryMethods',
  marketplacesApi: '/accounts/business/marketplaces',
  reportCountApi: userId => `/orders/report/${userId}/count`,
  userAccountBalanceApi: userId => `banking/accounts/${userId}/balance`,
  newsApi: (page, perPage) => `/catalog/homitagNews?page=${page}&perPage=${perPage}`,
  forumTopicsApi: (page, perPage) => `/accounts/topics?page=${page}&perPage=${perPage}`,
  invertoryAlertsApi: (userId, page, perPage) =>
    `/catalog/posts?userId=${userId}&sort=lowestInventory&page=${page}&perPage=${perPage}`,
  salesReportApi: userId => `/orders/report/${userId}/sales`,
  userAccountApi: () => `/accounts/users/`,
  userContract: () => `/accounts/content?location=user_contract&status=published`,
  userAgreementApi: () => `/accounts/content?location=agreements&status=published`,
  userReportApi: () => '/accounts/reports/',
  userAlbums: userId => `/catalog/catalogReseller?userId=${userId}`,
  userSavedItems: userId => `/catalog/catalogReseller?userId=${userId}&onlyPosts=true`,
  customerService: () => '/accounts/customerService',
  reportUser: () => '/accounts/reportUser'
};
